package com.example.smartparkingsystem;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.FirebaseException;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthProvider;

import java.util.concurrent.TimeUnit;

public class login extends AppCompatActivity {
    EditText etPhoneNumber;
    Button generateOTP;
    FirebaseAuth auth;
    String verificationCode;
    EditText etOTP;
    Button signIn;
    String phoneNumber,otp;
    PhoneAuthProvider.OnVerificationStateChangedCallbacks mCallbacks;
    PhoneAuthProvider.ForceResendingToken mResendToken;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        etPhoneNumber = findViewById(R.id.phoneNumber);
        etOTP = findViewById(R.id.otp);
        signIn = findViewById(R.id.signIn);

        signIn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                if (!etPhoneNumber.getText().toString().matches("[0-9] {10}")) {
                    etPhoneNumber.setError("Enter only 10 digit Mobile number!");
                } else if (!etPhoneNumber.getText().toString().isEmpty()) {
                    etPhoneNumber.setError("Please enter a mobile number!");
                }

                if (!etOTP.getText().toString().matches("[0-6]")) {
                    etOTP.setError(("Enter 6 digit OTP"));
                } else if (!etOTP.getText().toString().isEmpty()) {
                    etOTP.setError("Please enter a OTP!");
                }


                findViews();
                StartFirebaseLogin();


                generateOTP.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View view) {

                        phoneNumber = etPhoneNumber.getText().toString();

                        PhoneAuthProvider.getInstance().verifyPhoneNumber(
                                "+91" + phoneNumber,                     // Phone number to verify
                                60,                           // Timeout duration
                                TimeUnit.SECONDS,                // Unit of timeout
                                login.this,        // Activity (for callback binding)
                                mCallbacks);                      // OnVerificationStateChangedCallbacks
                    }
                });


                signIn.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        otp = etOTP.getText().toString();
                        PhoneAuthCredential credential = PhoneAuthProvider.getCredential(verificationCode, otp);
                        SignInWithPhone(credential);
                    }
                });

            }

            private void SignInWithPhone(PhoneAuthCredential credential) {
                auth.signInWithCredential(credential)
                        .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                            @Override
                            public void onComplete(@NonNull Task<AuthResult> task) {
                                if (task.isSuccessful()) {
                                    startActivity(new Intent(login.this, MainActivity.class));
                                    finish();
                                } else {
                                    Toast.makeText(login.this, "Incorrect OTP", Toast.LENGTH_SHORT).show();
                                }
                            }
                        });
            }

            private void findViews() {
                etPhoneNumber = findViewById(R.id.phoneNumber);
                generateOTP = findViewById((R.id.generatepassword));
                etOTP = findViewById(R.id.otp);
                signIn = findViewById(R.id.signIn);
            }

            private void StartFirebaseLogin() {

                auth = FirebaseAuth.getInstance();
                mCallbacks = new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {

                    @Override
                    public void onVerificationCompleted(PhoneAuthCredential phoneAuthCredential) {
                        Toast.makeText(login.this, "verification completed", Toast.LENGTH_SHORT).show();

                    }

                    @Override
                    public void onVerificationFailed(FirebaseException e) {

                        Toast.makeText(login.this, "verification failed", Toast.LENGTH_SHORT).show();
                    }


                    @Override
                    public void onCodeSent(String verificationID, PhoneAuthProvider.ForceResendingToken forceResendingToken) {
                        super.onCodeSent(verificationID, forceResendingToken);
                        verificationCode = verificationID;
                        mResendToken = forceResendingToken;


                        Toast.makeText(login.this, "Code sent", Toast.LENGTH_SHORT).show();
                    }
                };
            }


        });
    }
}
